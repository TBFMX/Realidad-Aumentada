/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include <iostream>
#include <cstdlib>
#include <getopt.h>
#include <string>
#include <cassert>
#include <stdexcept>

class FrameProcessor{
public:
	FrameProcessor(){}
	~FrameProcessor(){}
	void stop(){}
	bool run(){return true;}
};
/* Header for class com_tbf_jnitester_FrameProcessor */

#ifndef _FRAMEPROCESSOR_H
#define _FRAMEPROCESSOR_H
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_tbf_jnitester_FrameProcessor
 * Method:    nativeCreateObject
 * Signature: (Ljava/lang/String;F)J
 */
JNIEXPORT jlong JNICALL Java_com_tbf_jnitester_FrameProcessor_nativeCreateObject
  (JNIEnv *, jclass);

/*
 * Class:     com_tbf_jnitester_FrameProcessor
 * Method:    nativeDestroyObject
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_tbf_jnitester_FrameProcessor_nativeDestroyObject
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_tbf_jnitester_FrameProcessor
 * Method:    nativeStart        // Load native library after(!) OpenCV initialization
        System.loadLibrary("native_sample");
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_tbf_jnitester_FrameProcessor_nativeStart
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_tbf_jnitester_FrameProcessor
 * Method:    nativeStop
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_tbf_jnitester_FrameProcessor_nativeStop
(JNIEnv *, jclass, jlong);


/*
 * Class:     com_tbf_jnitester_FrameProcessor
 * Method:    nativeFindFeatures
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_com_tbf_jnitester_FrameProcessor_nativeFindFeatures
(JNIEnv *, jclass, jlong, jlong, jlong);

/*
 * Class:     com_tbf_jnitester_FrameProcessor
 * Method:    nativeCartoonify
 * Signature: (JJJ)V
 */
JNIEXPORT void JNICALL Java_com_tbf_jnitester_FrameProcessor_nativeCartoonify
(JNIEnv *, jclass, jlong, jlong, jlong);

JNIEXPORT void JNICALL Java_com_tbf_jnitester_FrameProcessor_nativeMarker
(JNIEnv * jenv, jclass, jlong thiz, jlong addrRgbaSrc, jlong addrRgbaDst, jlong addrRgbaMarker);

#ifdef __cplusplus
}
#endif
#endif
